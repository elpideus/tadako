#!/usr/bin/env node
"use strict";var ne=Object.create;var v=Object.defineProperty;var ae=Object.getOwnPropertyDescriptor;var te=Object.getOwnPropertyNames;var se=Object.getPrototypeOf,re=Object.prototype.hasOwnProperty;var ie=(c,n)=>()=>(n||c((n={exports:{}}).exports,n),n.exports);var oe=(c,n,o,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let O of te(n))!re.call(c,O)&&O!==o&&v(c,O,{get:()=>n[O],enumerable:!(e=ae(n,O))||e.enumerable});return c};var g=(c,n,o)=>(o=c!=null?ne(se(c)):{},oe(n||!c||!c.__esModule?v(o,"default",{value:c,enumerable:!0}):o,c));var j=ie((tn,Ie)=>{Ie.exports={name:"tadako",version:"2.3.3",description:"An unofficial AnimeWorld API",author:"Stefan Cucoranu <elpideus@gmail.com>",license:"GPLv3",repository:{type:"git",url:"https://github.com/elpideus/tadako.git"},main:"index.js",type:"commonjs",keywords:["anime","data","information","api","scraping"],scripts:{build:"npx esbuild cli.ts --bundle --outfile=cli.js --platform=node --format=cjs --minify --target=node22 --external:cheerio --external:esbuild --external:puppeteer",reinstall:"npm uninstall -g tadako && npm install -g .",build_and_reinstall:"npm run build && npm run reinstall"},peerDependencies:{typescript:"^5.7.2"},dependencies:{cheerio:"^1.0.0",esbuild:"^0.24.2",puppeteer:"^24.1.1"},files:["index.ts","cli.ts","cli.js","src","src/Tadako.ts","LICENSE","tsconfig.json","README.md"],devDependencies:{"@types/node":"^22.10.4",typescript:"^5.7.3"},bin:{tadako:"cli.js"}}});var Z=g(require("puppeteer")),J=g(require("cheerio"));var w={ANIME:0,MOVIE:4,OVA:1,ONA:2,SPECIAL:3,MUSIC:5};var d=(A=>(A.JAPANESE="jp",A.ITALIAN="it",A.CHINESE="ch",A.KOREAN="kr",A.ENGLISH="en",A))(d||{});var L={"ARTI MARZIALI":3,AVANGUARDIA:5,AVVENTURA:2,AZIONE:1,BAMBINI:47,COMMEDIA:4,DEMONI:6,DRAMMATICO:7,ECCHI:8,FANTASY:9,GIOCO:10,HAREM:11,HENTAI:43,HORROR:13,JOSEI:14,MAGIA:16,MECHA:18,MILITARI:19,MISTERO:21,MUSICALE:20,PARODIA:22,POLIZIA:23,PSICOLOGICO:24,ROMANTICO:46,SAMURAI:26,"SCI-FI":28,SCOLASTICO:27,SEINEN:29,SENTIMENTALE:25,SHOUJO:30,"SHOUJO AI":31,SHOUNEN:32,"SHOUNEN AI":33,"SLICE OF LIFE":34,SPAZIO:35,SOPRANNATURALE:37,SPORT:36,STORICO:12,SUPERPOTERI:38,THRILLER:39,VAMPIRI:40,VEICOLI:48,YAOI:41,YURI:42};var k={DEFAULT:0,NEW_ADDITIONS:1,NEW:1,A_TO_Z:2,ATOZ:2,ALPHABETICAL:2,Z_TO_A:3,ZTOA:3,OLDEST:4,LATEST:5,VIEWS:6,"MOST VIEWED":6,MOST_VIEWED:6};var $={ONGOING:0,AIRING:0,FINISHED:1,UNRELEASED:2,DROPPED:3},H={"IN CORSO":0,IN_CORSO:0,INCORSO:0,FINITO:1,"NON RILASCIATO":2,NON_RILASCIATO:2,NONRILASCIATO:2,DROPPATO:3};var R=class{static parseItalianDate=n=>{let o={Gennaio:1,Febbraio:2,Marzo:3,Aprile:4,Maggio:5,Giugno:6,Luglio:7,Agosto:8,Settembre:9,Ottobre:10,Novembre:11,Dicembre:12};if(!n)return null;let e=n.trim().split(" ");if(e.length!==3)return null;let[O,A,_]=e,m=parseInt(O,10),N=o[A],l=parseInt(_,10);return!m||!N||!l?null:new Date(l,N-1,m)};static secondsToHumanTime=n=>{let o=Math.floor(n/86400);n%=24*3600;let e=Math.floor(n/3600);n%=3600;let O=Math.floor(n/60);n%=60;let A=[];return o>0&&A.push(`${o} day${o>1?"s":""}`),e>0&&A.push(`${e} hour${e>1?"s":""}`),O>0&&A.push(`${O} minute${O>1?"s":""}`),(n>0||A.length===0)&&A.push(`${n} second${n>1?"s":""}`),A.join(" ")}};var b=g(require("node:os"));var S=g(require("node:os")),F=g(require("node:path")),y=g(require("https")),V=g(require("fs"));var h=class{url;fileName;outputDir;constructor(n,o=null,e=null){this.url=n;let O=n.split("/");this.fileName=o??O[O.length-1],this.outputDir=e??F.default.join(S.homedir(),"Downloads")}downloadFile=async(n=Math.ceil(S.cpus().length/2),o=!0)=>{let O=await new Promise((a,i)=>{y.default.get(this.url,{method:"HEAD"},I=>{if(I.statusCode!==200&&I.statusCode!==206){i(new Error(`Failed to fetch file headers: ${I.statusCode}`));return}a(I.headers)}).on("error",i)}),A=parseInt(O["content-length"]||"0",10);if(!A)throw new Error("Unable to determine file size.");let _=Math.ceil(A/n),m=0,N=0,l=Date.now(),t=Date.now();console.log(`Downloading ${this.fileName} (${n} ${n>1?"threads":"thread"}) ...`);let r=0,s=setInterval(()=>{let a=m/A*100,i=(Date.now()-t)/1e3;Date.now()-l>=5e3&&(N=m/1024/1024/i,l=Date.now());let I=A-m,p=Math.floor(N>0?I/(N*1024*1024):0);process.stdout.clearLine(0),process.stdout.cursorTo(0);let M=A<2*1024*1024*1024?Math.floor(a):a.toFixed(2);process.stdout.write(`Downloaded: ${M}% (${(m/1024/1024).toFixed(2)} MB / ${(A/1024/1024).toFixed(2)} MB) - Speed: ${N.toFixed(2)} MB/s ETA: ${R.secondsToHumanTime(p)}`),r+=1},1e3),T=(a,i,I)=>new Promise((p,M)=>{let u={headers:{Range:`bytes=${a}-${i}`}};y.default.get(this.url,u,f=>{if(f.statusCode!==206){M(new Error(`Failed to download chunk ${I}: ${f.statusCode}`));return}let B=[];f.on("data",Y=>{B.push(Y),m+=Y.length}),f.on("end",()=>{p(Buffer.concat(B))}),f.on("error",M)})}),E=[];for(let a=0;a<n;a++){let i=a*_,I=Math.min(A-1,(a+1)*_-1);E.push(T(i,I,a))}try{let a=await Promise.all(E);await V.default.promises.writeFile(F.default.join(this.outputDir,this.fileName),Buffer.concat(a)),clearInterval(s);let i=`Finished downloading ${this.fileName} (${(A/1024/1024).toFixed(2)} MB) in ${R.secondsToHumanTime(r)}.
`;o?(console.clear(),console.log(i)):(process.stdout.clearLine(0),process.stdout.cursorTo(0),process.stdout.write(i))}catch(a){throw clearInterval(s),a}}};var W=g(require("node:path")),P=class{url;anime;constructor(n,o=null){this.url=n,this.anime=o}getDownloadURL=async()=>(await D.parse(this.url))("#download .widget.downloads .widget-body #alternativeDownloadLink").attr("href");download=async(n=null,o=null,e=Math.ceil(b.cpus().length/2))=>{if(n||(n=W.join(b.homedir(),"Downloads")),!o){let O=(await this.getDownloadURL())?.split("/");O&&O.length>1&&(o=O[O.length-1],await new h(await this.getDownloadURL()??"",o,n).downloadFile(e));return}await new h(this.url,o,n).downloadFile(e)}};var C=class{url;title="";alternativeTitle=null;poster=null;AniListURL=null;MyAnimeListURL=null;trailer=null;category=null;releaseDate=null;season=null;studio=null;genres=[];rating=null;duration=null;episodes=[];status=null;views=null;keywords=null;shortDescription=null;constructor(n,o={}){this.url=n,Object.assign(this,o)}data=async()=>(await this.init(),this);init=async()=>{let n=await D.parse(this.url);return this.title=n("#anime-title").text(),this.alternativeTitle=n("#anime-title").attr("data-jtitle")??this.alternativeTitle,this.poster=n("#main .content .widget.info .widget-body .row .info .thumb .img").attr("src")??this.poster,this.AniListURL=n("#anilist-button")?.attr("href")??this.AniListURL,this.MyAnimeListURL=n("#mal-button")?.attr("href")??this.MyAnimeListURL,this.trailer=n("#controls .trailer")?.attr("data-url")?`https://www.youtube.com/watch?v=${n("#controls .trailer")?.attr("data-url")?.split("/").pop()}`:this.trailer,this.category=w[n('dt:contains("Categoria:")').next().text().trim().toUpperCase()],this.releaseDate=R.parseItalianDate(n('dt:contains("Data di Uscita:")').next().text().trim()),this.season=n('dt:contains("Stagione:")').next().find("a").text().trim(),this.studio=n('dt:contains("Studio:")').next().find("a").text().trim(),n('dt:contains("Genere:")').next().find("a").each((o,e)=>{this.genres.push(L[n(e).text().trim().toUpperCase()])}),this.rating=parseFloat(n('dt:contains("Voto:")').next().find(".rating span").text().trim()),this.duration=n('dt:contains("Durata:")').next().text().trim(),n("#animeId .widget-body .server.active .episodes.range").each((o,e)=>{n(e).find("li.episode").each((O,A)=>{this.episodes.push(new P(`https://${D.domain}${n(A).find("a").attr("href")}`,this))})}),this.status=H[n('dt:contains("Stato:")').next().find("a").text().trim().toUpperCase()],this.views=parseInt(n('dt:contains("Visualizzazioni:")').next().text().trim()),this.keywords=n("#tagsReload").text(),this}};var D=class c{static domain="www.animeworld.so";static routes={list:"az-list",search:"filter"};static async parse(n){let o=await Z.default.launch({headless:"shell",args:["--no-sandbox","--disable-setuid-sandbox"]}),e=await o.newPage();await e.setRequestInterception(!0),e.on("request",async A=>{let _=A.resourceType();["image","stylesheet","font","media","script"].includes(_)?await A.abort():await A.continue()}),await e.goto(n,{waitUntil:"domcontentloaded"});let O=await e.content();return await o.close(),J.load(O)}static async list(n=1,o=null){let e=await c.parse(`https://${this.domain}/${this.routes.list}`),O=parseInt(e("#main .content .widget.az-list .widget-body div .paging-wrapper #paging-form .total").text())||1,A=[];return e("#main .content .widget.az-list .widget-body .items .item").each((_,m)=>{let N=e(m);A.push(new C(`https://${c.domain}${N.find(".info .name").attr("href")}`,{title:N.find(".info .name").text(),shortDescription:N.find(".info p").text(),poster:N.find("a img").attr("src")||null,releaseDate:R.parseItalianDate(N.find(".info .name").attr("data-tippy-content")||"")||new Date}))}),{page:n>O?1:n,maxPages:O,results:A}}static async search(n="",o={}){let e=Object.entries(o).filter(([N,l])=>l!=null).map(([N,l])=>`${N}=${encodeURIComponent(l)}`).join("&"),O=await c.parse(`https://${this.domain}/${this.routes.search}?keyword=${n}&${e}`),A=[];O("#main .content .widget .widget-body .film-list .item").each((N,l)=>{let t=O(l),r=0;t.find("a.poster .status .movie")&&(r=4),t.find("a.poster .status .ova")&&(r=1),t.find("a.poster .status .ona")&&(r=2),t.find("a.poster .status .special")&&(r=3),t.find("a.poster .status .music")&&(r=5),A.push(new C(`https://${c.domain}${t.find(".inner a.name").attr("href")}`,{title:t.find(".inner a.name").text(),poster:t.find(".inner a.poster img").attr("src"),alternativeTitle:t.find(".inner a.name").attr("data-jtitle"),category:r}))});let _=O("#main .content .widget .widget-body .paging-wrapper #paging-form #page-input").attr("placeholder")||"1",m=O("#main .content .widget .widget-body .paging-wrapper #paging-form .total").text()||"1";return{page:o.page||parseInt(_),maxPages:parseInt(m),results:A,filters:o}}};var U=require("node:child_process"),x=g(require("readline")),G=g(require("node:path"));var ee=g(require("node:os"));var K={h:"help",v:"version",e:"episode",l:"language",c:"category",t:"threads",o:"out-dir",f:"filename"},X=(c,n=K)=>{let o={},e=null;for(let O=0;O<c.length;O++){let A=c[O];if(A.startsWith("--"))e=A.slice(2),o[e]=!0;else if(A.startsWith("-")){if(c.length<1)continue;let _=A.slice(1),m=n[_];m?(e=m,o[m]=!0):console.warn(`Unknown short flag: -${_}`)}else e&&(o[e]=A,e=null)}return o},z="\x1B[32m\u25CF\x1B[0m",Q=" ",q=c=>`\x1B[32m${c}\x1B[0m`,Oe=async()=>{let c=process.argv.slice(2),n=c[0];if(n.length<5){console.warn("The query should be longer than 4 characters.");return}let o=c[1],e=X(c.slice(2));if(n||(console.log("Usage: tadako <anime-title> <command> [--episode <episode-number>] [--language <language>] [other options]"),process.exit(1)),n==="--help"||n==="-h"){let l={watch:"Starts playing the selected anime via mpv",download:"Downloads the selected anime"},t={"--help":{info:"Displays help regarding the program"},"--version":{info:"Displays the current version of the program"},"--episode":{info:"Defines the anime episode for the command",example:"--episode 6"},"--language":{info:"Defines the audio language for the anime",example:"--language jp"},"--genre":{info:"Defines the genre for the anime search filters",example:"--genre ecchi"},"--season":{info:"Defines the season for the anime search filters",example:"--season winter"},"--year":{info:"Defines the year for the anime search filters",example:"--year 2012"},"--category":{info:"Defines the category for the anime search filters",example:"--category anime"},"--status":{info:"Defines the season for the anime search filters",example:"--status finished"},"--studio":{info:"Defines the studio for the anime search filters",example:"--studio TNK"},"--dub":{info:"Defines the dubbing for the anime search filters",example:"--dub no"},"--sort":{info:"Defines the sorting for the anime search filters",example:"--sort oldest"},"--threads":{info:"Number of threads to use for download",example:"--threads 8"},"--out-dir":{info:"The directory where the file(s) will be downloaded",example:'--out-dir "C:/Users/Your Name/Desktop"'},"--filename":{info:"Name of the file containing the downloaded anime video (must contain extension)",example:'--filename "High School DxD - Episode 6.mp4"'},"--all":{info:"Selects all of the anime's episodes for watching or downloading. Useful for watching multiple episodes without interruption."}};Object.keys(t).forEach(a=>{let i=Object.keys(K).find(I=>`--${K[I]}`===a);i&&(t[a].short=`-${i}`)});let r=Math.max(...Object.keys(t).map(a=>a.length),...Object.values(t).map(a=>a.short?.length||0)),s=Math.max(...Object.keys(l).map(a=>a.length)),T=Object.keys(t).map(a=>{let i=t[a],I=i.short?`, ${i.short}`:"",p=i.example?` [Example: ${i.example}]`:"";return`  ${(a+I).padEnd(r+8)}${i.info}${p}`}).join(`
`),E=Object.keys(l).map(a=>`  ${a.padEnd(s+4)}${l[a]}`).join(`
`);console.log(`Usage: tadako <anime-title> [<command>] [options]

The following commands are available:
${E}

The following options are available:
${T}`),process.exit()}if(n==="--version"||n==="-v"){let{version:l}=j();console.log(`Tadako Version: ${l}`),process.exit()}(n&&!o||o.startsWith("--")||o.startsWith("-"))&&(o="watch",e=X(c.slice(1)));let O=(l,t,r)=>{let s=process.stdout.rows,T=Math.max(0,t-Math.floor(s/2)),E=l.slice(T,T+r);console.clear();let a="";for(let i=0;i<E.length;i++){let I=T+i,p=I===t?z:Q,M=I===t?q(E[i]):E[i];a+=`${p} ${M}
`}process.stdout.write(a)},A=async l=>{let t=x.createInterface({input:process.stdin,output:process.stdout,terminal:!0}),r=0,s=process.stdout.rows-2,T=(E,a)=>{a.name==="up"?r=r>0?r-1:l.length-1:a.name==="down"?r=r<l.length-1?r+1:0:a.name==="return"&&t.close(),O(l,r,s)};return O(l,r,s),t.input?.on("keypress",T),new Promise(E=>t.on("close",()=>E(l[r])))},_=(l,t,r=10)=>{let s=process.stdout.rows,T=Math.max(1,s-2),E=Math.max(0,Math.floor(t/r)-Math.floor(T/2)),a=l.slice(E*r,(E+T)*r);console.clear();let i="";for(let I=0;I<a.length;I++){let M=E*r+I===t;i+=`${M?z:Q} ${M?q(a[I]):a[I]} `,(I+1)%r===0&&(i+=`
`)}process.stdout.write(i)},m=async(l,t=10)=>{let r=x.createInterface({input:process.stdin,output:process.stdout,terminal:!0}),s=0,T=Math.ceil(l.length/t),E=(a,i)=>{let I=Math.floor(s/t),p=s%t;i.name==="up"?s=I>0?s-t:(T-1)*t+p:i.name==="down"?s=I<T-1?s+t:p:i.name==="left"?s=p>0?s-1:I*t+(t-1):i.name==="right"?s=p<t-1&&s<l.length-1?s+1:I*t:i.name==="return"&&r.close(),_(l.map((M,u)=>`${u+1}`),s,t)};return _(l.map((a,i)=>`${i+1}`),s,t),r.input?.on("keypress",E),new Promise(a=>r.on("close",()=>a(l[s])))},N=async()=>{let l={genre:e.genre?Number.isNaN(Number(e.genre??"null"))?L[e.genre.toUpperCase()]:e.genre:null,season:e.season||null,status:e.status?Number.isNaN(Number(e.status??"null"))?$[e.status.toUpperCase()]??H[e.status.toUpperCase()]:e.status:null,year:e.year||null,type:e.type?Number.isNaN(Number(e.type??"null"))?w[e.type.toUpperCase()]:e.type:null,studio:e.studio||null,language:e.language||"it",sort:e.sort?Number.isNaN(Number(e.sort??"null"))?k[e.sort.toUpperCase()]:e.sort:4,dub:e.dub?Number.isNaN(Number(e.dub??"null"))?["TRUE","YES","SI"].includes(e.dub.toUpperCase())?"1":"0":e.dub:null},t=(await D.search(n,l)).results,r=0;if(t.length===0){if(!e.language){let a=Object.values(d);for(;r<a.length&&(l.language=a[r],t=(await D.search(n,l)).results,!(t.length>0));)r++}t.length===0&&(console.log(`No results found for "${n}" in any language.`),process.exit(1))}let s;if(t.length===1)s=t[0];else{let a=t.map(I=>I.title),i=await A(a);s=t.find(I=>I.title===i)}s||(console.log("Selected anime not found."),process.exit(1)),console.clear(),console.log("Loading episodes..."),await s.data();let T;e.all?T=s.episodes[0]:e.episode?T=s.episodes[e.episode-1]:s.episodes.length>1?T=await m(s.episodes):T=s.episodes[0],T||(console.log(`Episode ${e.episode} not found for "${s.title}"`),process.exit(1)),console.clear(),console.log("Anime loading...");let E=await T.getDownloadURL();return E||(console.log(`No download URL found for episode ${e.episode}`),process.exit(1)),{downloadURL:E,selectedAnime:s,selectedEpisode:T}};if(o==="watch"){let l=await N();console.clear(),(()=>{try{return(0,U.execSync)(`${e["mpv-dir"]?G.join(e["mpv-dir"],"mpv"):"mpv"} --version`,{stdio:"ignore"}),!0}catch{return!1}})()||(e["mpv-dir"]?console.log(`
The mpv location provided doesn't seem to be working.`):console.log("MPV is not installed or not working properly."),process.exit(1)),console.clear();let r=async(s,T=!1,E=[])=>{if(T)return new Promise((a,i)=>{(0,U.exec)(`${e["mpv-dir"]?G.join(e["mpv-dir"],"mpv"):"mpv"} "${s}" ${e.fullscreen?"--fullscreen":""}`,I=>{I?(console.error("Error executing MPV:",I),i(I)):a()})});{let a=[s];e.fullscreen&&a.push("--fullscreen"),(0,U.spawn)(e["mpv-dir"]?G.join(e["mpv-dir"],"mpv"):"mpv",a,{detached:!0,stdio:"ignore"}).unref()}};if(e["hold-cli"]||e.all)if(e.all){let s=e.episode?e.episode-1:0;for(let T of l.selectedAnime.episodes.slice(e.episode?e.episode-1:0)){console.clear(),s+=1,console.log(`"${l.selectedAnime.title}" episode ${s} is now playing via ${e["mpv-dir"]??"mpv"}\`...`),console.log("Use CTRL + C to stop watching.");let E=await T.getDownloadURL();E&&await r(E,!0)}}else await r(l.downloadURL,!0);else await r(l.downloadURL)}else if(o==="download"){let l=await N();console.clear();let t=(r,s=!0)=>new h(r,e.filename??null,e["out-dir"]??null).downloadFile(e.threads??Math.ceil(ee.cpus().length/2),s);if(e.all){let r=Date.now(),s=l.selectedAnime,T=s.episodes;e.episode&&(T=s.episodes.slice(e.episode-1,s.episodes.length-1));for(let I of T){let p=await I.getDownloadURL();p&&await t(p,!1)}let E=Date.now(),a=Math.ceil((E-r)/1e3),i=R.secondsToHumanTime(a);console.clear(),console.log(`Downloaded ${T.length} (${e.episode??1} -> ${s.episodes.length}) episodes of ${s.title} in ${i}.`)}else{let r=Date.now(),s=l.selectedAnime,T=l.selectedEpisode;e.episode&&(T=s.episodes[T]);let E=await T.getDownloadURL();E&&await t(E,!1);let a=Date.now(),i=Math.ceil((a-r)/1e3),I=R.secondsToHumanTime(i);console.clear(),console.log(`Downloaded 1 episode from ${s.title} in ${I}.`)}process.exit()}else console.log("Invalid command or missing arguments"),process.exit(1)};require.main===module&&Oe().catch(c=>{console.error("Error:",c),process.exit(1)});
