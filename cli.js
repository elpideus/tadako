#!/usr/bin/env node
"use strict";var ne=Object.create;var $=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var ae=Object.getOwnPropertyNames;var se=Object.getPrototypeOf,ie=Object.prototype.hasOwnProperty;var oe=(T,n)=>()=>(n||T((n={exports:{}}).exports,n),n.exports);var re=(T,n,o,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let c of ae(n))!ie.call(T,c)&&c!==o&&$(T,c,{get:()=>n[c],enumerable:!(e=te(n,c))||e.enumerable});return T};var M=(T,n,o)=>(o=T!=null?ne(se(T)):{},re(n||!T||!T.__esModule?$(o,"default",{value:T,enumerable:!0}):o,T));var X=oe((an,Ie)=>{Ie.exports={name:"tadako",version:"2.3.5",description:"An unofficial AnimeWorld API",author:"Stefan Cucoranu <elpideus@gmail.com>",license:"GPLv3",repository:{type:"git",url:"https://github.com/elpideus/tadako.git"},main:"index.js",type:"commonjs",keywords:["anime","data","information","api","scraping"],scripts:{build:"npx esbuild cli.ts --bundle --outfile=cli.js --platform=node --format=cjs --minify --target=node22 --external:cheerio --external:esbuild --external:puppeteer",reinstall:"npm uninstall -g tadako && npm install -g .",build_and_reinstall:"npm run build && npm run reinstall"},peerDependencies:{typescript:"^5.7.2"},dependencies:{cheerio:"^1.0.0",esbuild:"^0.24.2",puppeteer:"^24.1.1"},files:["index.ts","cli.ts","cli.js","src","src/Tadako.ts","LICENSE","tsconfig.json","README.md"],devDependencies:{"@types/node":"^22.10.4",typescript:"^5.7.3"},bin:{tadako:"cli.js"}}});var J=M(require("puppeteer")),j=M(require("cheerio"));var H={ANIME:0,MOVIE:4,OVA:1,ONA:2,SPECIAL:3,MUSIC:5};var S=(I=>(I.JAPANESE="jp",I.ITALIAN="it",I.CHINESE="ch",I.KOREAN="kr",I.ENGLISH="en",I))(S||{});var d={"ARTI MARZIALI":3,AVANGUARDIA:5,AVVENTURA:2,AZIONE:1,BAMBINI:47,COMMEDIA:4,DEMONI:6,DRAMMATICO:7,ECCHI:8,FANTASY:9,GIOCO:10,HAREM:11,HENTAI:43,HORROR:13,JOSEI:14,MAGIA:16,MECHA:18,MILITARI:19,MISTERO:21,MUSICALE:20,PARODIA:22,POLIZIA:23,PSICOLOGICO:24,ROMANTICO:46,SAMURAI:26,"SCI-FI":28,SCOLASTICO:27,SEINEN:29,SENTIMENTALE:25,SHOUJO:30,"SHOUJO AI":31,SHOUNEN:32,"SHOUNEN AI":33,"SLICE OF LIFE":34,SPAZIO:35,SOPRANNATURALE:37,SPORT:36,STORICO:12,SUPERPOTERI:38,THRILLER:39,VAMPIRI:40,VEICOLI:48,YAOI:41,YURI:42};var k={DEFAULT:0,NEW_ADDITIONS:1,NEW:1,A_TO_Z:2,ATOZ:2,ALPHABETICAL:2,Z_TO_A:3,ZTOA:3,OLDEST:4,LATEST:5,VIEWS:6,"MOST VIEWED":6,MOST_VIEWED:6};var V={ONGOING:0,AIRING:0,FINISHED:1,UNRELEASED:2,DROPPED:3},b={"IN CORSO":0,IN_CORSO:0,INCORSO:0,FINITO:1,"NON RILASCIATO":2,NON_RILASCIATO:2,NONRILASCIATO:2,DROPPATO:3};var g=class{static parseItalianDate=n=>{let o={Gennaio:1,Febbraio:2,Marzo:3,Aprile:4,Maggio:5,Giugno:6,Luglio:7,Agosto:8,Settembre:9,Ottobre:10,Novembre:11,Dicembre:12};if(!n)return null;let e=n.trim().split(" ");if(e.length!==3)return null;let[c,I,_]=e,N=parseInt(c,10),m=o[I],R=parseInt(_,10);return!N||!m||!R?null:new Date(R,m-1,N)};static secondsToHumanTime=n=>{let o=Math.floor(n/86400);n%=24*3600;let e=Math.floor(n/3600);n%=3600;let c=Math.floor(n/60);n%=60;let I=[];return o>0&&I.push(`${o} day${o>1?"s":""}`),e>0&&I.push(`${e} hour${e>1?"s":""}`),c>0&&I.push(`${c} minute${c>1?"s":""}`),(n>0||I.length===0)&&I.push(`${n} second${n>1?"s":""}`),I.join(" ")}};var F=M(require("node:os"));var G=M(require("node:os")),y=M(require("node:path")),x=M(require("https")),W=M(require("fs"));var U=class{url;fileName;outputDir;constructor(n,o=null,e=null){this.url=n;let c=n.split("/");this.fileName=o??c[c.length-1],this.outputDir=e??y.default.join(G.homedir(),"Downloads")}downloadFile=async(n=Math.ceil(G.cpus().length/2),o=!0)=>{let c=await new Promise((A,a)=>{x.default.get(this.url,{method:"HEAD"},r=>{if(r.statusCode!==200&&r.statusCode!==206){a(new Error(`Failed to fetch file headers: ${r.statusCode}`));return}A(r.headers)}).on("error",a)}),I=parseInt(c["content-length"]||"0",10);if(!I)throw new Error("Unable to determine file size.");let _=Math.ceil(I/n),N=0,m=0,R=Date.now(),i=Date.now();console.log(`Downloading ${this.fileName} (${n} ${n>1?"threads":"thread"}) ...`);let s=0,l=setInterval(()=>{let A=N/I*100,a=(Date.now()-i)/1e3;Date.now()-R>=5e3&&(m=N/1024/1024/a,R=Date.now());let r=I-N,E=Math.floor(m>0?r/(m*1024*1024):0);process.stdout.clearLine(0),process.stdout.cursorTo(0);let p=I<2*1024*1024*1024?Math.floor(A):A.toFixed(2);process.stdout.write(`Downloaded: ${p}% (${(N/1024/1024).toFixed(2)} MB / ${(I/1024/1024).toFixed(2)} MB) - Speed: ${m.toFixed(2)} MB/s ETA: ${g.secondsToHumanTime(E)}`),s+=1},1e3),t=(A,a,r)=>new Promise((E,p)=>{let h={headers:{Range:`bytes=${A}-${a}`}};x.default.get(this.url,h,C=>{if(C.statusCode!==206){p(new Error(`Failed to download chunk ${r}: ${C.statusCode}`));return}let v=[];C.on("data",Y=>{v.push(Y),N+=Y.length}),C.on("end",()=>{E(Buffer.concat(v))}),C.on("error",p)})}),O=[];for(let A=0;A<n;A++){let a=A*_,r=Math.min(I-1,(A+1)*_-1);O.push(t(a,r,A))}try{let A=await Promise.all(O);await W.default.promises.writeFile(y.default.join(this.outputDir,this.fileName),Buffer.concat(A)),clearInterval(l);let a=`Finished downloading ${this.fileName} (${(I/1024/1024).toFixed(2)} MB) in ${g.secondsToHumanTime(s)}.
`;o?(console.clear(),console.log(a)):(process.stdout.clearLine(0),process.stdout.cursorTo(0),process.stdout.write(a))}catch(A){throw clearInterval(l),A}}};var Z=M(require("node:path")),w=class{url;anime;constructor(n,o=null){this.url=n,this.anime=o}getDownloadURL=async()=>(await D.parse(this.url))("#download .widget.downloads .widget-body #alternativeDownloadLink").attr("href");download=async(n=null,o=null,e=Math.ceil(F.cpus().length/2))=>{if(n||(n=Z.join(F.homedir(),"Downloads")),!o){let c=(await this.getDownloadURL())?.split("/");c&&c.length>1&&(o=c[c.length-1],await new U(await this.getDownloadURL()??"",o,n).downloadFile(e));return}await new U(this.url,o,n).downloadFile(e)}};var f=class{url;title="";alternativeTitle=null;poster=null;AniListURL=null;MyAnimeListURL=null;trailer=null;category=null;releaseDate=null;season=null;studio=null;genres=[];rating=null;duration=null;episodes=[];status=null;views=null;keywords=null;shortDescription=null;constructor(n,o={}){this.url=n,Object.assign(this,o)}data=async()=>(await this.init(),this);init=async()=>{let n=await D.parse(this.url);return this.title=n("#anime-title").text(),this.alternativeTitle=n("#anime-title").attr("data-jtitle")??this.alternativeTitle,this.poster=n("#main .content .widget.info .widget-body .row .info .thumb .img").attr("src")??this.poster,this.AniListURL=n("#anilist-button")?.attr("href")??this.AniListURL,this.MyAnimeListURL=n("#mal-button")?.attr("href")??this.MyAnimeListURL,this.trailer=n("#controls .trailer")?.attr("data-url")?`https://www.youtube.com/watch?v=${n("#controls .trailer")?.attr("data-url")?.split("/").pop()}`:this.trailer,this.category=H[n('dt:contains("Categoria:")').next().text().trim().toUpperCase()],this.releaseDate=g.parseItalianDate(n('dt:contains("Data di Uscita:")').next().text().trim()),this.season=n('dt:contains("Stagione:")').next().find("a").text().trim(),this.studio=n('dt:contains("Studio:")').next().find("a").text().trim(),n('dt:contains("Genere:")').next().find("a").each((o,e)=>{this.genres.push(d[n(e).text().trim().toUpperCase()])}),this.rating=parseFloat(n('dt:contains("Voto:")').next().find(".rating span").text().trim()),this.duration=n('dt:contains("Durata:")').next().text().trim(),n("#animeId .widget-body .server.active .episodes.range").each((o,e)=>{n(e).find("li.episode").each((c,I)=>{this.episodes.push(new w(`https://${D.domain}${n(I).find("a").attr("href")}`,this))})}),this.status=b[n('dt:contains("Stato:")').next().find("a").text().trim().toUpperCase()],this.views=parseInt(n('dt:contains("Visualizzazioni:")').next().text().trim()),this.keywords=n("#tagsReload").text(),this}};var D=class T{static domain="www.animeworld.so";static routes={list:"az-list",search:"filter"};static async parse(n){let o=await J.default.launch({headless:"shell",args:["--no-sandbox","--disable-setuid-sandbox"]}),e=await o.newPage();await e.setRequestInterception(!0),e.on("request",async I=>{let _=I.resourceType();["image","stylesheet","font","media","script"].includes(_)?await I.abort():await I.continue()}),await e.goto(n,{waitUntil:"domcontentloaded"});let c=await e.content();return await o.close(),j.load(c)}static async list(n=1,o=null){let e=await T.parse(`https://${this.domain}/${this.routes.list}`),c=parseInt(e("#main .content .widget.az-list .widget-body div .paging-wrapper #paging-form .total").text())||1,I=[];return e("#main .content .widget.az-list .widget-body .items .item").each((_,N)=>{let m=e(N);I.push(new f(`https://${T.domain}${m.find(".info .name").attr("href")}`,{title:m.find(".info .name").text(),shortDescription:m.find(".info p").text(),poster:m.find("a img").attr("src")||null,releaseDate:g.parseItalianDate(m.find(".info .name").attr("data-tippy-content")||"")||new Date}))}),{page:n>c?1:n,maxPages:c,results:I}}static async search(n="",o={}){let e=Object.entries(o).filter(([m,R])=>R!=null).map(([m,R])=>`${m}=${encodeURIComponent(R)}`).join("&"),c=await T.parse(`https://${this.domain}/${this.routes.search}?keyword=${n}&${e}`),I=[];c("#main .content .widget .widget-body .film-list .item").each((m,R)=>{let i=c(R),s=0;i.find("a.poster .status .movie")&&(s=4),i.find("a.poster .status .ova")&&(s=1),i.find("a.poster .status .ona")&&(s=2),i.find("a.poster .status .special")&&(s=3),i.find("a.poster .status .music")&&(s=5),I.push(new f(`https://${T.domain}${i.find(".inner a.name").attr("href")}`,{title:i.find(".inner a.name").text(),poster:i.find(".inner a.poster img").attr("src"),alternativeTitle:i.find(".inner a.name").attr("data-jtitle"),category:s}))});let _=c("#main .content .widget .widget-body .paging-wrapper #paging-form #page-input").attr("placeholder")||"1",N=c("#main .content .widget .widget-body .paging-wrapper #paging-form .total").text()||"1";return{page:o.page||parseInt(_),maxPages:parseInt(N),results:I,filters:o}}};var P=require("node:child_process"),K=M(require("readline")),L=M(require("node:path"));var u=M(require("node:os"));var B={h:"help",v:"version",e:"episode",l:"language",c:"category",t:"threads",o:"out-dir",f:"filename"},z=(T,n=B)=>{let o={},e=null;for(let c=0;c<T.length;c++){let I=T[c];if(I.startsWith("--"))e=I.slice(2),o[e]=!0;else if(I.startsWith("-")){if(T.length<1)continue;let _=I.slice(1),N=n[_];N?(e=N,o[N]=!0):console.warn(`Unknown short flag: -${_}`)}else e&&(o[e]=I,e=null)}return o},Q="\x1B[32m\u25CF\x1B[0m",q=" ",ee=T=>`\x1B[32m${T}\x1B[0m`,ce=async()=>{let T=process.argv.slice(2),n=T[0];if(n.length<5){console.warn("The query should be longer than 4 characters.");return}let o=T[1],e=z(T.slice(2));if(n||(console.log("Usage: tadako <anime-title> <command> [--episode <episode-number>] [--language <language>] [other options]"),process.exit(1)),n==="--help"||n==="-h"){let i={watch:"Starts playing the selected anime via mpv",download:"Downloads the selected anime",link:"Displays direct links to anime episodes"},s={"--help":{info:"Displays help regarding the program"},"--version":{info:"Displays the current version of the program"},"--episode":{info:"Defines the anime episode for the command",example:"--episode 6"},"--language":{info:"Defines the audio language for the anime",example:"--language jp"},"--genre":{info:"Defines the genre for the anime search filters",example:"--genre ecchi"},"--season":{info:"Defines the season for the anime search filters",example:"--season winter"},"--year":{info:"Defines the year for the anime search filters",example:"--year 2012"},"--category":{info:"Defines the category for the anime search filters",example:"--category anime"},"--status":{info:"Defines the season for the anime search filters",example:"--status finished"},"--studio":{info:"Defines the studio for the anime search filters",example:"--studio TNK"},"--dub":{info:"Defines the dubbing for the anime search filters",example:"--dub no"},"--sort":{info:"Defines the sorting for the anime search filters",example:"--sort oldest"},"--threads":{info:"Number of threads to use for download",example:"--threads 8"},"--out-dir":{info:"The directory where the file(s) will be downloaded",example:'--out-dir "C:/Users/Your Name/Desktop"'},"--filename":{info:"Name of the file containing the downloaded anime video (must contain extension)",example:'--filename "High School DxD - Episode 6.mp4"'},"--all":{info:"Selects all of the anime's episodes for watching or downloading. Useful for watching multiple episodes without interruption."}};Object.keys(s).forEach(a=>{let r=Object.keys(B).find(E=>`--${B[E]}`===a);r&&(s[a].short=`-${r}`)});let l=Math.max(...Object.keys(s).map(a=>a.length),...Object.values(s).map(a=>a.short?.length||0)),t=Math.max(...Object.keys(i).map(a=>a.length)),O=Object.keys(s).map(a=>{let r=s[a],E=r.short?`, ${r.short}`:"",p=r.example?` [Example: ${r.example}]`:"";return`  ${(a+E).padEnd(l+8)}${r.info}${p}`}).join(`
`),A=Object.keys(i).map(a=>`  ${a.padEnd(t+4)}${i[a]}`).join(`
`);console.log(`Usage: tadako <anime-title> [<command>] [options]

The following commands are available:
${A}

The following options are available:
${O}`),process.exit()}if(n==="--version"||n==="-v"){let{version:i}=X();console.log(`Tadako Version: ${i}`),process.exit()}(n&&!o||o.startsWith("--")||o.startsWith("-"))&&(o="watch",e=z(T.slice(1)));let c=(i,s,l)=>{let t=process.stdout.rows,O=Math.max(0,s-Math.floor(t/2)),A=i.slice(O,O+l);console.clear();let a="";for(let r=0;r<A.length;r++){let E=O+r,p=E===s?Q:q,h=E===s?ee(A[r]):A[r];a+=`${p} ${h}
`}process.stdout.write(a)},I=async i=>{let s=K.createInterface({input:process.stdin,output:process.stdout,terminal:!0}),l=0,t=process.stdout.rows-2,O=(A,a)=>{a.name==="up"?l=l>0?l-1:i.length-1:a.name==="down"?l=l<i.length-1?l+1:0:a.name==="return"&&s.close(),c(i,l,t)};return c(i,l,t),s.input?.on("keypress",O),new Promise(A=>s.on("close",()=>A(i[l])))},_=(i,s,l=10)=>{let t=process.stdout.rows,O=Math.max(1,t-2),A=Math.max(0,Math.floor(s/l)-Math.floor(O/2)),a=i.slice(A*l,(A+O)*l);console.clear();let r="";for(let E=0;E<a.length;E++){let h=A*l+E===s;r+=`${h?Q:q} ${h?ee(a[E]):a[E]} `,(E+1)%l===0&&(r+=`
`)}process.stdout.write(r)},N=0,m=async(i,s=10)=>{let l=K.createInterface({input:process.stdin,output:process.stdout,terminal:!0}),t=0,O=Math.ceil(i.length/s),A=(a,r)=>{let E=Math.floor(t/s),p=t%s;r.name==="up"?t=E>0?t-s:(O-1)*s+p:r.name==="down"?t=E<O-1?t+s:p:r.name==="left"?t=p>0?t-1:E*s+(s-1):r.name==="right"?t=p<s-1&&t<i.length-1?t+1:E*s:r.name==="return"&&(N=t,l.close()),_(i.map((h,C)=>`${C+1}`),t,s)};return _(i.map((a,r)=>`${r+1}`),t,s),l.input?.on("keypress",A),new Promise(a=>l.on("close",()=>a(i[t])))},R=async()=>{let i={genre:e.genre?Number.isNaN(Number(e.genre??"null"))?d[e.genre.toUpperCase()]:e.genre:null,season:e.season||null,status:e.status?Number.isNaN(Number(e.status??"null"))?V[e.status.toUpperCase()]??b[e.status.toUpperCase()]:e.status:null,year:e.year||null,type:e.type?Number.isNaN(Number(e.type??"null"))?H[e.type.toUpperCase()]:e.type:null,studio:e.studio||null,language:e.language||"it",sort:e.sort?Number.isNaN(Number(e.sort??"null"))?k[e.sort.toUpperCase()]:e.sort:4,dub:e.dub?Number.isNaN(Number(e.dub??"null"))?["TRUE","YES","SI"].includes(e.dub.toUpperCase())?"1":"0":e.dub:null},s=(await D.search(n,i)).results,l=0;if(s.length===0){if(!e.language){let a=Object.values(S);for(;l<a.length&&(i.language=a[l],s=(await D.search(n,i)).results,!(s.length>0));)l++}s.length===0&&(console.log(`No results found for "${n}" in any language.`),process.exit(1))}let t;if(s.length===1)t=s[0];else{let a=s.map(E=>E.title),r=await I(a);t=s.find(E=>E.title===r)}t||(console.log("Selected anime not found."),process.exit(1)),console.clear(),console.log("Loading episodes..."),await t.data();let O;e.all?O=t.episodes[0]:e.episode?O=t.episodes[e.episode-1]:t.episodes.length>1?O=await m(t.episodes):O=t.episodes[0],O||(console.log(`Episode ${e.episode} not found for "${t.title}"`),process.exit(1)),console.clear(),console.log("Anime loading...");let A=await O.getDownloadURL();return A||(console.log(`No download URL found for episode ${e.episode}`),process.exit(1)),{downloadURL:A,selectedAnime:t,selectedEpisode:O}};if(o==="watch"){let i=await R();console.clear(),(()=>{try{return(0,P.execSync)(`${e["mpv-dir"]?L.join(e["mpv-dir"],"mpv"):"mpv"} --version`,{stdio:"ignore"}),!0}catch{return!1}})()||(e["mpv-dir"]?console.log(`
The mpv location provided doesn't seem to be working.`):console.log("MPV is not installed or not working properly."),process.exit(1)),console.clear();let l=async(t,O=!1,A=[])=>{if(O)return new Promise((a,r)=>{(0,P.exec)(`${e["mpv-dir"]?L.join(e["mpv-dir"],"mpv"):"mpv"} "${t}" ${e.fullscreen?"--fullscreen":""}`,E=>{E?(console.error("Error executing MPV:",E),r(E)):a()})});{let a=[t];e.fullscreen&&a.push("--fullscreen"),(0,P.spawn)(e["mpv-dir"]?L.join(e["mpv-dir"],"mpv"):"mpv",a,{detached:!0,stdio:"ignore"}).unref()}};if(e["hold-cli"]||e.all)if(e.all){let t=e.episode?e.episode-1:0;for(let O of i.selectedAnime.episodes.slice(e.episode?e.episode-1:0)){console.clear(),t+=1,console.log(`"${i.selectedAnime.title}" episode ${t} is now playing via ${e["mpv-dir"]??"mpv"}\`...`),console.log("Use CTRL + C to stop watching.");let A=await O.getDownloadURL();A&&await l(A,!0)}}else console.log(`"${i.selectedAnime.title}" episode ${e.episode??N} is now playing via ${e["mpv-dir"]??"mpv"}\`...`),await l(i.downloadURL,!0);else console.log(`"${i.selectedAnime.title}" episode ${e.episode??N} is now playing via ${e["mpv-dir"]??"mpv"}\`...`),await l(i.downloadURL)}else if(o==="download"){let i=await R();console.clear();let s=(l,t=!0)=>new U(l,e.filename??null,e["out-dir"]??null).downloadFile(e.threads??Math.ceil(u.cpus().length/2),t);if(e.all){let l=Date.now(),t=i.selectedAnime,O=t.episodes;e.episode&&(O=t.episodes.slice(e.episode-1,t.episodes.length-1));for(let E of O){let p=await E.getDownloadURL();p&&await s(p,!1)}let A=Date.now(),a=Math.ceil((A-l)/1e3),r=g.secondsToHumanTime(a);console.clear(),console.log(`Downloaded ${O.length} (${e.episode??1} -> ${t.episodes.length}) episodes of ${t.title} in ${r}.`),console.log(`Downloaded file(s) can be found in "${e["out-dir"]??L.join(u.homedir(),"Downloads")}"`)}else{let l=Date.now(),t=i.selectedAnime,O=i.selectedEpisode;e.episode&&(O=t.episodes[parseInt(e.episode)-1]);let A=await O.getDownloadURL();A&&await s(A,!1);let a=Date.now(),r=Math.ceil((a-l)/1e3),E=g.secondsToHumanTime(r);console.clear(),console.log(`Downloaded episode ${e.episode??N} of "${t.title}" in ${E}.`),console.log(`Downloaded file(s) can be found in "${e["out-dir"]??L.join(u.homedir(),"Downloads")}"`)}process.exit()}else if(o==="link"){let i=await R(),s=await i.selectedEpisode.getDownloadURL();if(s)if(console.clear(),e.all){let l=i.selectedAnime,t=l.episodes;e.episode&&(t=l.episodes.slice(e.episode-1,l.episodes.length-1));let O=1;for(let A of t){let a=await A.getDownloadURL();a&&(console.log(`"${l.title}" episode ${O} link:`),console.log(a),O+=1)}}else console.log(`"${i.selectedAnime.title}" episode ${e.episode??N+1} link:`),console.log(s);else console.log("No download URL found for the selected anime/episode.")}else console.log("Invalid command or missing arguments"),process.exit(1)};require.main===module&&ce().catch(T=>{console.error("Error:",T),process.exit(1)});
